name: GoSecTest

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.x

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Installing protoc-gen-go
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Installing swagger
        run: |
          go install github.com/go-swagger/go-swagger/cmd/swagger@latest

      - name: Set up Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up yarn
        run: npm install --global yarn

      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          # We let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -fmt sarif -out results.sarif ./...'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
      
      - name: Build
        run: |
          mkdir ./bin && protoc -I=./ --go_out=./internal ./internal/proto/*.proto  && go build -o ./bin/blackdagger .

      - name: Run
        run: |
          blackdagger server
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://[::]:9093'
